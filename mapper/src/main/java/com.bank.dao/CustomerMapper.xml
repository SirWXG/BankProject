<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Customer">
    <id column="CUSTOMER_ID" jdbcType="INTEGER" property="customerId" />
    <result column="CUSTOMER_NAME" jdbcType="VARCHAR" property="customerName" />
    <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
    <result column="CUSTOMER_IDENTITY" jdbcType="VARCHAR" property="customerIdentity" />
    <result column="CUSTOMER_ADDRESS" jdbcType="VARCHAR" property="customerAddress" />
    <result column="CUSTOMER_PHONE" jdbcType="VARCHAR" property="customerPhone" />
    <result column="CUSTOMER_PASSWORD" jdbcType="VARCHAR" property="customerPassword" />
    <result column="CUSTOMER_SEX" jdbcType="VARCHAR" property="customerSex" />
    <result column="CUSTOMER_BIRTH" jdbcType="DATE" property="customerBirth" />
    <result column="CUSTOMER_CREDIT" jdbcType="INTEGER" property="customerCredit" />
    <result column="CUSTOMER_OTHER1" jdbcType="VARCHAR" property="customerOther1" />
    <result column="CUSTOMER_OTHER2" jdbcType="VARCHAR" property="customerOther2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CUSTOMER_ID, CUSTOMER_NAME, REAL_NAME, CUSTOMER_IDENTITY, CUSTOMER_ADDRESS, CUSTOMER_PHONE, 
    CUSTOMER_PASSWORD, CUSTOMER_SEX, CUSTOMER_BIRTH, CUSTOMER_CREDIT, CUSTOMER_OTHER1, 
    CUSTOMER_OTHER2
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Customer">
    insert into customer (CUSTOMER_ID, CUSTOMER_NAME, REAL_NAME, 
      CUSTOMER_IDENTITY, CUSTOMER_ADDRESS, CUSTOMER_PHONE, 
      CUSTOMER_PASSWORD, CUSTOMER_SEX, CUSTOMER_BIRTH, 
      CUSTOMER_CREDIT, CUSTOMER_OTHER1, CUSTOMER_OTHER2
      )
    values (#{customerId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{customerIdentity,jdbcType=VARCHAR}, #{customerAddress,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR}, 
      #{customerPassword,jdbcType=VARCHAR}, #{customerSex,jdbcType=VARCHAR}, #{customerBirth,jdbcType=DATE}, 
      #{customerCredit,jdbcType=INTEGER}, #{customerOther1,jdbcType=VARCHAR}, #{customerOther2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="customerName != null">
        CUSTOMER_NAME,
      </if>
      <if test="realName != null">
        REAL_NAME,
      </if>
      <if test="customerIdentity != null">
        CUSTOMER_IDENTITY,
      </if>
      <if test="customerAddress != null">
        CUSTOMER_ADDRESS,
      </if>
      <if test="customerPhone != null">
        CUSTOMER_PHONE,
      </if>
      <if test="customerPassword != null">
        CUSTOMER_PASSWORD,
      </if>
      <if test="customerSex != null">
        CUSTOMER_SEX,
      </if>
      <if test="customerBirth != null">
        CUSTOMER_BIRTH,
      </if>
      <if test="customerCredit != null">
        CUSTOMER_CREDIT,
      </if>
      <if test="customerOther1 != null">
        CUSTOMER_OTHER1,
      </if>
      <if test="customerOther2 != null">
        CUSTOMER_OTHER2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="customerIdentity != null">
        #{customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="customerAddress != null">
        #{customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerPassword != null">
        #{customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerSex != null">
        #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerBirth != null">
        #{customerBirth,jdbcType=DATE},
      </if>
      <if test="customerCredit != null">
        #{customerCredit,jdbcType=INTEGER},
      </if>
      <if test="customerOther1 != null">
        #{customerOther1,jdbcType=VARCHAR},
      </if>
      <if test="customerOther2 != null">
        #{customerOther2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null">
        CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerIdentity != null">
        CUSTOMER_IDENTITY = #{record.customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAddress != null">
        CUSTOMER_ADDRESS = #{record.customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        CUSTOMER_PHONE = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPassword != null">
        CUSTOMER_PASSWORD = #{record.customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.customerSex != null">
        CUSTOMER_SEX = #{record.customerSex,jdbcType=VARCHAR},
      </if>
      <if test="record.customerBirth != null">
        CUSTOMER_BIRTH = #{record.customerBirth,jdbcType=DATE},
      </if>
      <if test="record.customerCredit != null">
        CUSTOMER_CREDIT = #{record.customerCredit,jdbcType=INTEGER},
      </if>
      <if test="record.customerOther1 != null">
        CUSTOMER_OTHER1 = #{record.customerOther1,jdbcType=VARCHAR},
      </if>
      <if test="record.customerOther2 != null">
        CUSTOMER_OTHER2 = #{record.customerOther2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      CUSTOMER_IDENTITY = #{record.customerIdentity,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS = #{record.customerAddress,jdbcType=VARCHAR},
      CUSTOMER_PHONE = #{record.customerPhone,jdbcType=VARCHAR},
      CUSTOMER_PASSWORD = #{record.customerPassword,jdbcType=VARCHAR},
      CUSTOMER_SEX = #{record.customerSex,jdbcType=VARCHAR},
      CUSTOMER_BIRTH = #{record.customerBirth,jdbcType=DATE},
      CUSTOMER_CREDIT = #{record.customerCredit,jdbcType=INTEGER},
      CUSTOMER_OTHER1 = #{record.customerOther1,jdbcType=VARCHAR},
      CUSTOMER_OTHER2 = #{record.customerOther2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Customer">
    update customer
    <set>
      <if test="customerName != null">
        CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="customerIdentity != null">
        CUSTOMER_IDENTITY = #{customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="customerAddress != null">
        CUSTOMER_ADDRESS = #{customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        CUSTOMER_PHONE = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerPassword != null">
        CUSTOMER_PASSWORD = #{customerPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerSex != null">
        CUSTOMER_SEX = #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerBirth != null">
        CUSTOMER_BIRTH = #{customerBirth,jdbcType=DATE},
      </if>
      <if test="customerCredit != null">
        CUSTOMER_CREDIT = #{customerCredit,jdbcType=INTEGER},
      </if>
      <if test="customerOther1 != null">
        CUSTOMER_OTHER1 = #{customerOther1,jdbcType=VARCHAR},
      </if>
      <if test="customerOther2 != null">
        CUSTOMER_OTHER2 = #{customerOther2,jdbcType=VARCHAR},
      </if>
    </set>
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Customer">
    update customer
    set CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      CUSTOMER_IDENTITY = #{customerIdentity,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS = #{customerAddress,jdbcType=VARCHAR},
      CUSTOMER_PHONE = #{customerPhone,jdbcType=VARCHAR},
      CUSTOMER_PASSWORD = #{customerPassword,jdbcType=VARCHAR},
      CUSTOMER_SEX = #{customerSex,jdbcType=VARCHAR},
      CUSTOMER_BIRTH = #{customerBirth,jdbcType=DATE},
      CUSTOMER_CREDIT = #{customerCredit,jdbcType=INTEGER},
      CUSTOMER_OTHER1 = #{customerOther1,jdbcType=VARCHAR},
      CUSTOMER_OTHER2 = #{customerOther2,jdbcType=VARCHAR}
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
  </update>
</mapper>