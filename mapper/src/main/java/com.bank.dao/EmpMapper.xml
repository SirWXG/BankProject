<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.EmpMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Emp">
    <id column="EMP_ID" jdbcType="INTEGER" property="empId" />
    <result column="ROLE_ID" jdbcType="INTEGER" property="roleId" />
    <result column="EMP_NAME" jdbcType="VARCHAR" property="empName" />
    <result column="EMP_PASSWORD" jdbcType="VARCHAR" property="empPassword" />
    <result column="EMP_SEX" jdbcType="VARCHAR" property="empSex" />
    <result column="EMP_BIRTH" jdbcType="DATE" property="empBirth" />
    <result column="EMP_HIREDATE" jdbcType="DATE" property="empHiredate" />
    <result column="EMP_IDENTITY" jdbcType="VARCHAR" property="empIdentity" />
    <result column="EMP_ADDRESS" jdbcType="VARCHAR" property="empAddress" />
    <result column="EMP_PHONE" jdbcType="VARCHAR" property="empPhone" />
    <result column="EMP_EMAIL" jdbcType="VARCHAR" property="empEmail" />
    <result column="EMP_SALARY" jdbcType="REAL" property="empSalary" />
    <result column="EMP_BANK_ID" jdbcType="INTEGER" property="empBankId" />
    <result column="EMP_OTHER1" jdbcType="VARCHAR" property="empOther1" />
  </resultMap>
  <select id="selectByCond" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from emp e left join bank b on b.bank_id=e.emp_bank_id
  <where>
    <if test="empBankId !=null" >
      bank_id=#{empBankId}
    </if>
    <if test="empId !=null" >
      and emp_id=#{emoId}
    </if>
    <if test="empName!=null and empPass !=null">
      and emp_name=#{emp_name} and emp_pass=#{empPass}
    </if>
  </where>
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMP_ID, ROLE_ID, EMP_NAME, EMP_PASSWORD, EMP_SEX, EMP_BIRTH, EMP_HIREDATE, EMP_IDENTITY, 
    EMP_ADDRESS, EMP_PHONE, EMP_EMAIL, EMP_SALARY, EMP_BANK_ID, EMP_OTHER1
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.EmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp
    where EMP_ID = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where EMP_ID = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.EmpExample">
    delete from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Emp">
    insert into emp (EMP_ID, ROLE_ID, EMP_NAME, 
      EMP_PASSWORD, EMP_SEX, EMP_BIRTH, 
      EMP_HIREDATE, EMP_IDENTITY, EMP_ADDRESS, 
      EMP_PHONE, EMP_EMAIL, EMP_SALARY, 
      EMP_BANK_ID, EMP_OTHER1)
    values (#{empId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, 
      #{empPassword,jdbcType=VARCHAR}, #{empSex,jdbcType=VARCHAR}, #{empBirth,jdbcType=DATE}, 
      #{empHiredate,jdbcType=DATE}, #{empIdentity,jdbcType=VARCHAR}, #{empAddress,jdbcType=VARCHAR}, 
      #{empPhone,jdbcType=VARCHAR}, #{empEmail,jdbcType=VARCHAR}, #{empSalary,jdbcType=REAL}, 
      #{empBankId,jdbcType=INTEGER}, #{empOther1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Emp">
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        EMP_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="empName != null">
        EMP_NAME,
      </if>
      <if test="empPassword != null">
        EMP_PASSWORD,
      </if>
      <if test="empSex != null">
        EMP_SEX,
      </if>
      <if test="empBirth != null">
        EMP_BIRTH,
      </if>
      <if test="empHiredate != null">
        EMP_HIREDATE,
      </if>
      <if test="empIdentity != null">
        EMP_IDENTITY,
      </if>
      <if test="empAddress != null">
        EMP_ADDRESS,
      </if>
      <if test="empPhone != null">
        EMP_PHONE,
      </if>
      <if test="empEmail != null">
        EMP_EMAIL,
      </if>
      <if test="empSalary != null">
        EMP_SALARY,
      </if>
      <if test="empBankId != null">
        EMP_BANK_ID,
      </if>
      <if test="empOther1 != null">
        EMP_OTHER1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empPassword != null">
        #{empPassword,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        #{empSex,jdbcType=VARCHAR},
      </if>
      <if test="empBirth != null">
        #{empBirth,jdbcType=DATE},
      </if>
      <if test="empHiredate != null">
        #{empHiredate,jdbcType=DATE},
      </if>
      <if test="empIdentity != null">
        #{empIdentity,jdbcType=VARCHAR},
      </if>
      <if test="empAddress != null">
        #{empAddress,jdbcType=VARCHAR},
      </if>
      <if test="empPhone != null">
        #{empPhone,jdbcType=VARCHAR},
      </if>
      <if test="empEmail != null">
        #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empSalary != null">
        #{empSalary,jdbcType=REAL},
      </if>
      <if test="empBankId != null">
        #{empBankId,jdbcType=INTEGER},
      </if>
      <if test="empOther1 != null">
        #{empOther1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.EmpExample" resultType="java.lang.Long">
    select count(*) from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp
    <set>
      <if test="record.empId != null">
        EMP_ID = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empPassword != null">
        EMP_PASSWORD = #{record.empPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.empSex != null">
        EMP_SEX = #{record.empSex,jdbcType=VARCHAR},
      </if>
      <if test="record.empBirth != null">
        EMP_BIRTH = #{record.empBirth,jdbcType=DATE},
      </if>
      <if test="record.empHiredate != null">
        EMP_HIREDATE = #{record.empHiredate,jdbcType=DATE},
      </if>
      <if test="record.empIdentity != null">
        EMP_IDENTITY = #{record.empIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.empAddress != null">
        EMP_ADDRESS = #{record.empAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.empPhone != null">
        EMP_PHONE = #{record.empPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.empEmail != null">
        EMP_EMAIL = #{record.empEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.empSalary != null">
        EMP_SALARY = #{record.empSalary,jdbcType=REAL},
      </if>
      <if test="record.empBankId != null">
        EMP_BANK_ID = #{record.empBankId,jdbcType=INTEGER},
      </if>
      <if test="record.empOther1 != null">
        EMP_OTHER1 = #{record.empOther1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp
    set EMP_ID = #{record.empId,jdbcType=INTEGER},
      ROLE_ID = #{record.roleId,jdbcType=INTEGER},
      EMP_NAME = #{record.empName,jdbcType=VARCHAR},
      EMP_PASSWORD = #{record.empPassword,jdbcType=VARCHAR},
      EMP_SEX = #{record.empSex,jdbcType=VARCHAR},
      EMP_BIRTH = #{record.empBirth,jdbcType=DATE},
      EMP_HIREDATE = #{record.empHiredate,jdbcType=DATE},
      EMP_IDENTITY = #{record.empIdentity,jdbcType=VARCHAR},
      EMP_ADDRESS = #{record.empAddress,jdbcType=VARCHAR},
      EMP_PHONE = #{record.empPhone,jdbcType=VARCHAR},
      EMP_EMAIL = #{record.empEmail,jdbcType=VARCHAR},
      EMP_SALARY = #{record.empSalary,jdbcType=REAL},
      EMP_BANK_ID = #{record.empBankId,jdbcType=INTEGER},
      EMP_OTHER1 = #{record.empOther1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Emp">
    update emp
    <set>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        EMP_NAME = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empPassword != null">
        EMP_PASSWORD = #{empPassword,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        EMP_SEX = #{empSex,jdbcType=VARCHAR},
      </if>
      <if test="empBirth != null">
        EMP_BIRTH = #{empBirth,jdbcType=DATE},
      </if>
      <if test="empHiredate != null">
        EMP_HIREDATE = #{empHiredate,jdbcType=DATE},
      </if>
      <if test="empIdentity != null">
        EMP_IDENTITY = #{empIdentity,jdbcType=VARCHAR},
      </if>
      <if test="empAddress != null">
        EMP_ADDRESS = #{empAddress,jdbcType=VARCHAR},
      </if>
      <if test="empPhone != null">
        EMP_PHONE = #{empPhone,jdbcType=VARCHAR},
      </if>
      <if test="empEmail != null">
        EMP_EMAIL = #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empSalary != null">
        EMP_SALARY = #{empSalary,jdbcType=REAL},
      </if>
      <if test="empBankId != null">
        EMP_BANK_ID = #{empBankId,jdbcType=INTEGER},
      </if>
      <if test="empOther1 != null">
        EMP_OTHER1 = #{empOther1,jdbcType=VARCHAR},
      </if>
    </set>
    where EMP_ID = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Emp">
    update emp
    set ROLE_ID = #{roleId,jdbcType=INTEGER},
      EMP_NAME = #{empName,jdbcType=VARCHAR},
      EMP_PASSWORD = #{empPassword,jdbcType=VARCHAR},
      EMP_SEX = #{empSex,jdbcType=VARCHAR},
      EMP_BIRTH = #{empBirth,jdbcType=DATE},
      EMP_HIREDATE = #{empHiredate,jdbcType=DATE},
      EMP_IDENTITY = #{empIdentity,jdbcType=VARCHAR},
      EMP_ADDRESS = #{empAddress,jdbcType=VARCHAR},
      EMP_PHONE = #{empPhone,jdbcType=VARCHAR},
      EMP_EMAIL = #{empEmail,jdbcType=VARCHAR},
      EMP_SALARY = #{empSalary,jdbcType=REAL},
      EMP_BANK_ID = #{empBankId,jdbcType=INTEGER},
      EMP_OTHER1 = #{empOther1,jdbcType=VARCHAR}
    where EMP_ID = #{empId,jdbcType=INTEGER}
  </update>
</mapper>