<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.ChecksMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Checks">
    <id column="CHECK_ID" jdbcType="INTEGER" property="checkId" />
    <result column="BANK_ID" jdbcType="INTEGER" property="bankId" />
    <result column="PAY_CARD_ID" jdbcType="VARCHAR" property="payCardId" />
    <result column="CHECK_AMOUNT" jdbcType="REAL" property="checkAmount" />
    <result column="CHECK_CREATE" jdbcType="DATE" property="checkCreate" />
    <result column="RECEIPT_NAME" jdbcType="VARCHAR" property="receiptName" />
    <result column="RECEIPT_CARD" jdbcType="VARCHAR" property="receiptCard" />
    <result column="CHECK_USE" jdbcType="VARCHAR" property="checkUse" />
    <result column="CHECK_OTHER1" jdbcType="VARCHAR" property="checkOther1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CHECK_ID, BANK_ID, PAY_CARD_ID, CHECK_AMOUNT, CHECK_CREATE, RECEIPT_NAME, RECEIPT_CARD, 
    CHECK_USE, CHECK_OTHER1
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.ChecksExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from checks
    where CHECK_ID = #{checkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from checks
    where CHECK_ID = #{checkId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.ChecksExample">
    delete from checks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Checks">
    insert into checks (CHECK_ID, BANK_ID, PAY_CARD_ID, 
      CHECK_AMOUNT, CHECK_CREATE, RECEIPT_NAME, 
      RECEIPT_CARD, CHECK_USE, CHECK_OTHER1
      )
    values (#{checkId,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, #{payCardId,jdbcType=VARCHAR}, 
      #{checkAmount,jdbcType=REAL}, #{checkCreate,jdbcType=DATE}, #{receiptName,jdbcType=VARCHAR}, 
      #{receiptCard,jdbcType=VARCHAR}, #{checkUse,jdbcType=VARCHAR}, #{checkOther1,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Checks">
    insert into checks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        CHECK_ID,
      </if>
      <if test="bankId != null">
        BANK_ID,
      </if>
      <if test="payCardId != null">
        PAY_CARD_ID,
      </if>
      <if test="checkAmount != null">
        CHECK_AMOUNT,
      </if>
      <if test="checkCreate != null">
        CHECK_CREATE,
      </if>
      <if test="receiptName != null">
        RECEIPT_NAME,
      </if>
      <if test="receiptCard != null">
        RECEIPT_CARD,
      </if>
      <if test="checkUse != null">
        CHECK_USE,
      </if>
      <if test="checkOther1 != null">
        CHECK_OTHER1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="checkId != null">
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="payCardId != null">
        #{payCardId,jdbcType=VARCHAR},
      </if>
      <if test="checkAmount != null">
        #{checkAmount,jdbcType=REAL},
      </if>
      <if test="checkCreate != null">
        #{checkCreate,jdbcType=DATE},
      </if>
      <if test="receiptName != null">
        #{receiptName,jdbcType=VARCHAR},
      </if>
      <if test="receiptCard != null">
        #{receiptCard,jdbcType=VARCHAR},
      </if>
      <if test="checkUse != null">
        #{checkUse,jdbcType=VARCHAR},
      </if>
      <if test="checkOther1 != null">
        #{checkOther1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.ChecksExample" resultType="java.lang.Long">
    select count(*) from checks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update checks
    <set>
      <if test="record.checkId != null">
        CHECK_ID = #{record.checkId,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null">
        BANK_ID = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.payCardId != null">
        PAY_CARD_ID = #{record.payCardId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkAmount != null">
        CHECK_AMOUNT = #{record.checkAmount,jdbcType=REAL},
      </if>
      <if test="record.checkCreate != null">
        CHECK_CREATE = #{record.checkCreate,jdbcType=DATE},
      </if>
      <if test="record.receiptName != null">
        RECEIPT_NAME = #{record.receiptName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptCard != null">
        RECEIPT_CARD = #{record.receiptCard,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUse != null">
        CHECK_USE = #{record.checkUse,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOther1 != null">
        CHECK_OTHER1 = #{record.checkOther1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update checks
    set CHECK_ID = #{record.checkId,jdbcType=INTEGER},
      BANK_ID = #{record.bankId,jdbcType=INTEGER},
      PAY_CARD_ID = #{record.payCardId,jdbcType=VARCHAR},
      CHECK_AMOUNT = #{record.checkAmount,jdbcType=REAL},
      CHECK_CREATE = #{record.checkCreate,jdbcType=DATE},
      RECEIPT_NAME = #{record.receiptName,jdbcType=VARCHAR},
      RECEIPT_CARD = #{record.receiptCard,jdbcType=VARCHAR},
      CHECK_USE = #{record.checkUse,jdbcType=VARCHAR},
      CHECK_OTHER1 = #{record.checkOther1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Checks">
    update checks
    <set>
      <if test="bankId != null">
        BANK_ID = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="payCardId != null">
        PAY_CARD_ID = #{payCardId,jdbcType=VARCHAR},
      </if>
      <if test="checkAmount != null">
        CHECK_AMOUNT = #{checkAmount,jdbcType=REAL},
      </if>
      <if test="checkCreate != null">
        CHECK_CREATE = #{checkCreate,jdbcType=DATE},
      </if>
      <if test="receiptName != null">
        RECEIPT_NAME = #{receiptName,jdbcType=VARCHAR},
      </if>
      <if test="receiptCard != null">
        RECEIPT_CARD = #{receiptCard,jdbcType=VARCHAR},
      </if>
      <if test="checkUse != null">
        CHECK_USE = #{checkUse,jdbcType=VARCHAR},
      </if>
      <if test="checkOther1 != null">
        CHECK_OTHER1 = #{checkOther1,jdbcType=VARCHAR},
      </if>
    </set>
    where CHECK_ID = #{checkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Checks">
    update checks
    set BANK_ID = #{bankId,jdbcType=INTEGER},
      PAY_CARD_ID = #{payCardId,jdbcType=VARCHAR},
      CHECK_AMOUNT = #{checkAmount,jdbcType=REAL},
      CHECK_CREATE = #{checkCreate,jdbcType=DATE},
      RECEIPT_NAME = #{receiptName,jdbcType=VARCHAR},
      RECEIPT_CARD = #{receiptCard,jdbcType=VARCHAR},
      CHECK_USE = #{checkUse,jdbcType=VARCHAR},
      CHECK_OTHER1 = #{checkOther1,jdbcType=VARCHAR}
    where CHECK_ID = #{checkId,jdbcType=INTEGER}
  </update>
</mapper>