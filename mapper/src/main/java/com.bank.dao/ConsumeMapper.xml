<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.ConsumeMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Consume">
    <id column="CONSUME_ID" jdbcType="INTEGER" property="consumeId" />
    <result column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="CONSUME_AMOUNT" jdbcType="REAL" property="consumeAmount" />
    <result column="CONSUME_DATE" jdbcType="DATE" property="consumeDate" />
    <result column="CONSUME_RECEIPT" jdbcType="VARCHAR" property="consumeReceipt" />
    <result column="CONSUME_OTHER1" jdbcType="VARCHAR" property="consumeOther1" />
    <result column="CONSUME_OTHER2" jdbcType="VARCHAR" property="consumeOther2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CONSUME_ID, CARD_ID, CONSUME_AMOUNT, CONSUME_DATE, CONSUME_RECEIPT, CONSUME_OTHER1, 
    CONSUME_OTHER2
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.ConsumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consume
    where CONSUME_ID = #{consumeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consume
    where CONSUME_ID = #{consumeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.ConsumeExample">
    delete from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Consume">
    insert into consume (CONSUME_ID, CARD_ID, CONSUME_AMOUNT, 
      CONSUME_DATE, CONSUME_RECEIPT, CONSUME_OTHER1, 
      CONSUME_OTHER2)
    values (#{consumeId,jdbcType=INTEGER}, #{cardId,jdbcType=VARCHAR}, #{consumeAmount,jdbcType=REAL}, 
      #{consumeDate,jdbcType=DATE}, #{consumeReceipt,jdbcType=VARCHAR}, #{consumeOther1,jdbcType=VARCHAR}, 
      #{consumeOther2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Consume">
    insert into consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        CONSUME_ID,
      </if>
      <if test="cardId != null">
        CARD_ID,
      </if>
      <if test="consumeAmount != null">
        CONSUME_AMOUNT,
      </if>
      <if test="consumeDate != null">
        CONSUME_DATE,
      </if>
      <if test="consumeReceipt != null">
        CONSUME_RECEIPT,
      </if>
      <if test="consumeOther1 != null">
        CONSUME_OTHER1,
      </if>
      <if test="consumeOther2 != null">
        CONSUME_OTHER2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consumeId != null">
        #{consumeId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        #{consumeAmount,jdbcType=REAL},
      </if>
      <if test="consumeDate != null">
        #{consumeDate,jdbcType=DATE},
      </if>
      <if test="consumeReceipt != null">
        #{consumeReceipt,jdbcType=VARCHAR},
      </if>
      <if test="consumeOther1 != null">
        #{consumeOther1,jdbcType=VARCHAR},
      </if>
      <if test="consumeOther2 != null">
        #{consumeOther2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.ConsumeExample" resultType="java.lang.Long">
    select count(*) from consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consume
    <set>
      <if test="record.consumeId != null">
        CONSUME_ID = #{record.consumeId,jdbcType=INTEGER},
      </if>
      <if test="record.cardId != null">
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeAmount != null">
        CONSUME_AMOUNT = #{record.consumeAmount,jdbcType=REAL},
      </if>
      <if test="record.consumeDate != null">
        CONSUME_DATE = #{record.consumeDate,jdbcType=DATE},
      </if>
      <if test="record.consumeReceipt != null">
        CONSUME_RECEIPT = #{record.consumeReceipt,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeOther1 != null">
        CONSUME_OTHER1 = #{record.consumeOther1,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeOther2 != null">
        CONSUME_OTHER2 = #{record.consumeOther2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consume
    set CONSUME_ID = #{record.consumeId,jdbcType=INTEGER},
      CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      CONSUME_AMOUNT = #{record.consumeAmount,jdbcType=REAL},
      CONSUME_DATE = #{record.consumeDate,jdbcType=DATE},
      CONSUME_RECEIPT = #{record.consumeReceipt,jdbcType=VARCHAR},
      CONSUME_OTHER1 = #{record.consumeOther1,jdbcType=VARCHAR},
      CONSUME_OTHER2 = #{record.consumeOther2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Consume">
    update consume
    <set>
      <if test="cardId != null">
        CARD_ID = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        CONSUME_AMOUNT = #{consumeAmount,jdbcType=REAL},
      </if>
      <if test="consumeDate != null">
        CONSUME_DATE = #{consumeDate,jdbcType=DATE},
      </if>
      <if test="consumeReceipt != null">
        CONSUME_RECEIPT = #{consumeReceipt,jdbcType=VARCHAR},
      </if>
      <if test="consumeOther1 != null">
        CONSUME_OTHER1 = #{consumeOther1,jdbcType=VARCHAR},
      </if>
      <if test="consumeOther2 != null">
        CONSUME_OTHER2 = #{consumeOther2,jdbcType=VARCHAR},
      </if>
    </set>
    where CONSUME_ID = #{consumeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Consume">
    update consume
    set CARD_ID = #{cardId,jdbcType=VARCHAR},
      CONSUME_AMOUNT = #{consumeAmount,jdbcType=REAL},
      CONSUME_DATE = #{consumeDate,jdbcType=DATE},
      CONSUME_RECEIPT = #{consumeReceipt,jdbcType=VARCHAR},
      CONSUME_OTHER1 = #{consumeOther1,jdbcType=VARCHAR},
      CONSUME_OTHER2 = #{consumeOther2,jdbcType=VARCHAR}
    where CONSUME_ID = #{consumeId,jdbcType=INTEGER}
  </update>
</mapper>