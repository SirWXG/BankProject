<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.CardMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Card">
    <id column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="CARD_PASSWORD" jdbcType="VARCHAR" property="cardPassword" />
    <result column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
    <result column="CARD_BALANCE" jdbcType="REAL" property="cardBalance" />
    <result column="CARD_STATUS" jdbcType="VARCHAR" property="cardStatus" />
    <result column="CARD_FAIL" jdbcType="INTEGER" property="cardFail" />
    <result column="CARD_PHONE" jdbcType="VARCHAR" property="cardPhone" />
    <result column="CARD_DATE" jdbcType="TIMESTAMP" property="cardDate" />
    <result column="CARD_BANK_ID" jdbcType="INTEGER" property="cardBankId" />
    <result column="CARD_OTHER" jdbcType="VARCHAR" property="cardOther" />
  </resultMap>
  <resultMap id="MyResultMap" type="card" extends="BaseResultMap">
    <association property="customer" javaType="customer">
     <id column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
      <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
      <result column="CUSTOMER_IDENTITY" jdbcType="VARCHAR" property="customerIdentity" />
      <result column="CUSTOMER_PHONE" jdbcType="VARCHAR" property="customerPhone" />
    </association>
  </resultMap>
  <select id="selectCardId" resultMap="MyResultMap">
    select  card_id  FROM CARD
  </select>
  <select id="selectByCond" resultMap="MyResultMap" parameterType="map">
    select  <include refid="Base_Column_List"/>, REAL_NAME,CUSTOMER_IDENTITY,CUSTOMER_PHONE
    FROM CARD ca LEFT JOIN CUSTOMER cu ON ca.CUSTOMER_ID=cu.CUSTOMER_ID
    <where>
      <if test="customerId!=null">
        ca.CUSTOMER_ID=#{customerId}
      </if>
      <if test="cardId!=null">
        ca.CARD_ID=#{cardId}
      </if>
    </where>
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CARD_ID, CARD_PASSWORD, ca.CUSTOMER_ID, CARD_BALANCE, CARD_STATUS, CARD_FAIL, CARD_PHONE,
    CARD_DATE, CARD_BANK_ID, CARD_OTHER
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.CardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from card
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.CardExample">
    delete from card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Card">
    insert into card (CARD_ID, CARD_PASSWORD, CUSTOMER_ID, 
      CARD_BALANCE, CARD_STATUS, CARD_FAIL, 
      CARD_PHONE, CARD_DATE, CARD_BANK_ID, 
      CARD_OTHER)
    values (#{cardId,jdbcType=VARCHAR}, #{cardPassword,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR},
      #{cardBalance,jdbcType=REAL}, #{cardStatus,jdbcType=VARCHAR}, #{cardFail,jdbcType=INTEGER}, 
      #{cardPhone,jdbcType=VARCHAR}, #{cardDate,jdbcType=TIMESTAMP}, #{cardBankId,jdbcType=INTEGER}, 
      #{cardOther,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Card">
    insert into card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        CARD_ID,
      </if>
      <if test="cardPassword != null">
        CARD_PASSWORD,
      </if>
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="cardBalance != null">
        CARD_BALANCE,
      </if>
      <if test="cardStatus != null">
        CARD_STATUS,
      </if>
      <if test="cardFail != null">
        CARD_FAIL,
      </if>
      <if test="cardPhone != null">
        CARD_PHONE,
      </if>
      <if test="cardDate != null">
        CARD_DATE,
      </if>
      <if test="cardBankId != null">
        CARD_BANK_ID,
      </if>
      <if test="cardOther != null">
        CARD_OTHER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardPassword != null">
        #{cardPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="cardBalance != null">
        #{cardBalance,jdbcType=REAL},
      </if>
      <if test="cardStatus != null">
        #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardFail != null">
        #{cardFail,jdbcType=INTEGER},
      </if>
      <if test="cardPhone != null">
        #{cardPhone,jdbcType=VARCHAR},
      </if>
      <if test="cardDate != null">
        #{cardDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cardBankId != null">
        #{cardBankId,jdbcType=INTEGER},
      </if>
      <if test="cardOther != null">
        #{cardOther,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.CardExample" resultType="java.lang.Long">
    select count(*) from card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card
    <set>
      <if test="record.cardId != null">
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardPassword != null">
        CARD_PASSWORD = #{record.cardPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardBalance != null">
        CARD_BALANCE = #{record.cardBalance,jdbcType=REAL},
      </if>
      <if test="record.cardStatus != null">
        CARD_STATUS = #{record.cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cardFail != null">
        CARD_FAIL = #{record.cardFail,jdbcType=INTEGER},
      </if>
      <if test="record.cardPhone != null">
        CARD_PHONE = #{record.cardPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.cardDate != null">
        CARD_DATE = #{record.cardDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cardBankId != null">
        CARD_BANK_ID = #{record.cardBankId,jdbcType=INTEGER},
      </if>
      <if test="record.cardOther != null">
        CARD_OTHER = #{record.cardOther,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card
    set CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      CARD_PASSWORD = #{record.cardPassword,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      CARD_BALANCE = #{record.cardBalance,jdbcType=REAL},
      CARD_STATUS = #{record.cardStatus,jdbcType=VARCHAR},
      CARD_FAIL = #{record.cardFail,jdbcType=INTEGER},
      CARD_PHONE = #{record.cardPhone,jdbcType=VARCHAR},
      CARD_DATE = #{record.cardDate,jdbcType=TIMESTAMP},
      CARD_BANK_ID = #{record.cardBankId,jdbcType=INTEGER},
      CARD_OTHER = #{record.cardOther,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Card">
    update card
    <set>
      <if test="cardPassword != null">
        CARD_PASSWORD = #{cardPassword,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="cardBalance != null">
        CARD_BALANCE = #{cardBalance,jdbcType=REAL},
      </if>
      <if test="cardStatus != null">
        CARD_STATUS = #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardFail != null">
        CARD_FAIL = #{cardFail,jdbcType=INTEGER},
      </if>
      <if test="cardPhone != null">
        CARD_PHONE = #{cardPhone,jdbcType=VARCHAR},
      </if>
      <if test="cardDate != null">
        CARD_DATE = #{cardDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cardBankId != null">
        CARD_BANK_ID = #{cardBankId,jdbcType=INTEGER},
      </if>
      <if test="cardOther != null">
        CARD_OTHER = #{cardOther,jdbcType=VARCHAR},
      </if>
    </set>
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Card">
    update card
    set CARD_PASSWORD = #{cardPassword,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      CARD_BALANCE = #{cardBalance,jdbcType=REAL},
      CARD_STATUS = #{cardStatus,jdbcType=VARCHAR},
      CARD_FAIL = #{cardFail,jdbcType=INTEGER},
      CARD_PHONE = #{cardPhone,jdbcType=VARCHAR},
      CARD_DATE = #{cardDate,jdbcType=TIMESTAMP},
      CARD_BANK_ID = #{cardBankId,jdbcType=INTEGER},
      CARD_OTHER = #{cardOther,jdbcType=VARCHAR}
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>

  <insert id="addCard" parameterType="com.bank.pojo.Card">
    INSERT INTO card(CARD_ID,CARD_PASSWORD,CUSTOMER_ID,CARD_BALANCE,CARD_STATUS,CARD_PHONE,CARD_DATE)
    values (#{cardId},#{cardPassword},#{customerId},#{cardBalance},#{cardStatus},#{cardPhone},#{cardDate})
  </insert>

  <update id="updateCardStatus" parameterType="map">
    update card set CARD_STATUS=#{cardStatus} where CARD_ID=#{cardId} and CUSTOMER_ID=#{cardIdentity}
  </update>
</mapper>