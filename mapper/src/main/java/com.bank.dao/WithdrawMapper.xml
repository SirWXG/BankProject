<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.WithdrawMapper">
  <resultMap id="BaseResultMap" type="com.bank.pojo.Withdraw">
    <id column="WITHDRAW_ID" jdbcType="INTEGER" property="withdrawId" />
    <result column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="WITHDRAW_AMOUNT" jdbcType="REAL" property="withdrawAmount" />
    <result column="WITHDRAW_DATE" jdbcType="DATE" property="withdrawDate" />
    <result column="WITHDRAW_BANK_ID" jdbcType="INTEGER" property="withdrawBankId" />
    <result column="WITHDRAW_OTHER" jdbcType="VARCHAR" property="withdrawOther" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    WITHDRAW_ID, CARD_ID, WITHDRAW_AMOUNT, WITHDRAW_DATE, WITHDRAW_BANK_ID, WITHDRAW_OTHER
  </sql>
  <select id="selectByExample" parameterType="com.bank.pojo.WithdrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from withdraw
    where WITHDRAW_ID = #{withdrawId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from withdraw
    where WITHDRAW_ID = #{withdrawId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.WithdrawExample">
    delete from withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.Withdraw">
    insert into withdraw ( CARD_ID, WITHDRAW_AMOUNT,
      WITHDRAW_DATE, WITHDRAW_BANK_ID, WITHDRAW_OTHER
      )
    values ( #{cardId,jdbcType=VARCHAR}, #{withdrawAmount,jdbcType=REAL},
      sysdate(), #{withdrawBankId,jdbcType=INTEGER}, #{withdrawOther,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.Withdraw">
    insert into withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="withdrawId != null">
        WITHDRAW_ID,
      </if>
      <if test="cardId != null">
        CARD_ID,
      </if>
      <if test="withdrawAmount != null">
        WITHDRAW_AMOUNT,
      </if>
      <if test="withdrawDate != null">
        WITHDRAW_DATE,
      </if>
      <if test="withdrawBankId != null">
        WITHDRAW_BANK_ID,
      </if>
      <if test="withdrawOther != null">
        WITHDRAW_OTHER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="withdrawId != null">
        #{withdrawId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=REAL},
      </if>
      <if test="withdrawDate != null">
        #{withdrawDate,jdbcType=DATE},
      </if>
      <if test="withdrawBankId != null">
        #{withdrawBankId,jdbcType=INTEGER},
      </if>
      <if test="withdrawOther != null">
        #{withdrawOther,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.WithdrawExample" resultType="java.lang.Long">
    select count(*) from withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update withdraw
    <set>
      <if test="record.withdrawId != null">
        WITHDRAW_ID = #{record.withdrawId,jdbcType=INTEGER},
      </if>
      <if test="record.cardId != null">
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawAmount != null">
        WITHDRAW_AMOUNT = #{record.withdrawAmount,jdbcType=REAL},
      </if>
      <if test="record.withdrawDate != null">
        WITHDRAW_DATE = #{record.withdrawDate,jdbcType=DATE},
      </if>
      <if test="record.withdrawBankId != null">
        WITHDRAW_BANK_ID = #{record.withdrawBankId,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawOther != null">
        WITHDRAW_OTHER = #{record.withdrawOther,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update withdraw
    set WITHDRAW_ID = #{record.withdrawId,jdbcType=INTEGER},
      CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      WITHDRAW_AMOUNT = #{record.withdrawAmount,jdbcType=REAL},
      WITHDRAW_DATE = #{record.withdrawDate,jdbcType=DATE},
      WITHDRAW_BANK_ID = #{record.withdrawBankId,jdbcType=INTEGER},
      WITHDRAW_OTHER = #{record.withdrawOther,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.Withdraw">
    update withdraw
    <set>
      <if test="cardId != null">
        CARD_ID = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        WITHDRAW_AMOUNT = #{withdrawAmount,jdbcType=REAL},
      </if>
      <if test="withdrawDate != null">
        WITHDRAW_DATE = #{withdrawDate,jdbcType=DATE},
      </if>
      <if test="withdrawBankId != null">
        WITHDRAW_BANK_ID = #{withdrawBankId,jdbcType=INTEGER},
      </if>
      <if test="withdrawOther != null">
        WITHDRAW_OTHER = #{withdrawOther,jdbcType=VARCHAR},
      </if>
    </set>
    where WITHDRAW_ID = #{withdrawId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.Withdraw">
    update withdraw
    set CARD_ID = #{cardId,jdbcType=VARCHAR},
      WITHDRAW_AMOUNT = #{withdrawAmount,jdbcType=REAL},
      WITHDRAW_DATE = #{withdrawDate,jdbcType=DATE},
      WITHDRAW_BANK_ID = #{withdrawBankId,jdbcType=INTEGER},
      WITHDRAW_OTHER = #{withdrawOther,jdbcType=VARCHAR}
    where WITHDRAW_ID = #{withdrawId,jdbcType=INTEGER}
  </update>
</mapper>